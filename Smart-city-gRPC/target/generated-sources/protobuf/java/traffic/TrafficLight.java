// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: traffic_light.proto

// Protobuf Java Version: 3.25.3
package traffic;

public final class TrafficLight {
  private TrafficLight() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code traffic.LightColor}
   */
  public enum LightColor
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RED = 0;</code>
     */
    RED(0),
    /**
     * <code>YELLOW = 1;</code>
     */
    YELLOW(1),
    /**
     * <code>GREEN = 2;</code>
     */
    GREEN(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>RED = 0;</code>
     */
    public static final int RED_VALUE = 0;
    /**
     * <code>YELLOW = 1;</code>
     */
    public static final int YELLOW_VALUE = 1;
    /**
     * <code>GREEN = 2;</code>
     */
    public static final int GREEN_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LightColor valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static LightColor forNumber(int value) {
      switch (value) {
        case 0: return RED;
        case 1: return YELLOW;
        case 2: return GREEN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LightColor>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LightColor> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LightColor>() {
            public LightColor findValueByNumber(int number) {
              return LightColor.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return traffic.TrafficLight.getDescriptor().getEnumTypes().get(0);
    }

    private static final LightColor[] VALUES = values();

    public static LightColor valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LightColor(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:traffic.LightColor)
  }

  public interface GetStatusRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:traffic.GetStatusRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    java.lang.String getIntersectionId();
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    com.google.protobuf.ByteString
        getIntersectionIdBytes();
  }
  /**
   * Protobuf type {@code traffic.GetStatusRequest}
   */
  public static final class GetStatusRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:traffic.GetStatusRequest)
      GetStatusRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetStatusRequest.newBuilder() to construct.
    private GetStatusRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetStatusRequest() {
      intersectionId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetStatusRequest();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return traffic.TrafficLight.internal_static_traffic_GetStatusRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return traffic.TrafficLight.internal_static_traffic_GetStatusRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              traffic.TrafficLight.GetStatusRequest.class, traffic.TrafficLight.GetStatusRequest.Builder.class);
    }

    public static final int INTERSECTION_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object intersectionId_ = "";
    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    @java.lang.Override
    public java.lang.String getIntersectionId() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intersectionId_ = s;
        return s;
      }
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIntersectionIdBytes() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intersectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, intersectionId_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, intersectionId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof traffic.TrafficLight.GetStatusRequest)) {
        return super.equals(obj);
      }
      traffic.TrafficLight.GetStatusRequest other = (traffic.TrafficLight.GetStatusRequest) obj;

      if (!getIntersectionId()
          .equals(other.getIntersectionId())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERSECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getIntersectionId().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static traffic.TrafficLight.GetStatusRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static traffic.TrafficLight.GetStatusRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.GetStatusRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(traffic.TrafficLight.GetStatusRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code traffic.GetStatusRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:traffic.GetStatusRequest)
        traffic.TrafficLight.GetStatusRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return traffic.TrafficLight.internal_static_traffic_GetStatusRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return traffic.TrafficLight.internal_static_traffic_GetStatusRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                traffic.TrafficLight.GetStatusRequest.class, traffic.TrafficLight.GetStatusRequest.Builder.class);
      }

      // Construct using traffic.TrafficLight.GetStatusRequest.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        intersectionId_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return traffic.TrafficLight.internal_static_traffic_GetStatusRequest_descriptor;
      }

      @java.lang.Override
      public traffic.TrafficLight.GetStatusRequest getDefaultInstanceForType() {
        return traffic.TrafficLight.GetStatusRequest.getDefaultInstance();
      }

      @java.lang.Override
      public traffic.TrafficLight.GetStatusRequest build() {
        traffic.TrafficLight.GetStatusRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public traffic.TrafficLight.GetStatusRequest buildPartial() {
        traffic.TrafficLight.GetStatusRequest result = new traffic.TrafficLight.GetStatusRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(traffic.TrafficLight.GetStatusRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.intersectionId_ = intersectionId_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof traffic.TrafficLight.GetStatusRequest) {
          return mergeFrom((traffic.TrafficLight.GetStatusRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(traffic.TrafficLight.GetStatusRequest other) {
        if (other == traffic.TrafficLight.GetStatusRequest.getDefaultInstance()) return this;
        if (!other.getIntersectionId().isEmpty()) {
          intersectionId_ = other.intersectionId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                intersectionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object intersectionId_ = "";
      /**
       * <code>string intersection_id = 1;</code>
       * @return The intersectionId.
       */
      public java.lang.String getIntersectionId() {
        java.lang.Object ref = intersectionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          intersectionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return The bytes for intersectionId.
       */
      public com.google.protobuf.ByteString
          getIntersectionIdBytes() {
        java.lang.Object ref = intersectionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          intersectionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntersectionId() {
        intersectionId_ = getDefaultInstance().getIntersectionId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The bytes for intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:traffic.GetStatusRequest)
    }

    // @@protoc_insertion_point(class_scope:traffic.GetStatusRequest)
    private static final traffic.TrafficLight.GetStatusRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new traffic.TrafficLight.GetStatusRequest();
    }

    public static traffic.TrafficLight.GetStatusRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetStatusRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetStatusRequest>() {
      @java.lang.Override
      public GetStatusRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<GetStatusRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetStatusRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public traffic.TrafficLight.GetStatusRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrafficLightStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:traffic.TrafficLightStatus)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    java.lang.String getIntersectionId();
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    com.google.protobuf.ByteString
        getIntersectionIdBytes();

    /**
     * <code>.traffic.LightColor color = 2;</code>
     * @return The enum numeric value on the wire for color.
     */
    int getColorValue();
    /**
     * <code>.traffic.LightColor color = 2;</code>
     * @return The color.
     */
    traffic.TrafficLight.LightColor getColor();

    /**
     * <code>int32 seconds_remaining = 3;</code>
     * @return The secondsRemaining.
     */
    int getSecondsRemaining();
  }
  /**
   * Protobuf type {@code traffic.TrafficLightStatus}
   */
  public static final class TrafficLightStatus extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:traffic.TrafficLightStatus)
      TrafficLightStatusOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrafficLightStatus.newBuilder() to construct.
    private TrafficLightStatus(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrafficLightStatus() {
      intersectionId_ = "";
      color_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrafficLightStatus();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return traffic.TrafficLight.internal_static_traffic_TrafficLightStatus_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return traffic.TrafficLight.internal_static_traffic_TrafficLightStatus_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              traffic.TrafficLight.TrafficLightStatus.class, traffic.TrafficLight.TrafficLightStatus.Builder.class);
    }

    public static final int INTERSECTION_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object intersectionId_ = "";
    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    @java.lang.Override
    public java.lang.String getIntersectionId() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intersectionId_ = s;
        return s;
      }
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIntersectionIdBytes() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intersectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COLOR_FIELD_NUMBER = 2;
    private int color_ = 0;
    /**
     * <code>.traffic.LightColor color = 2;</code>
     * @return The enum numeric value on the wire for color.
     */
    @java.lang.Override public int getColorValue() {
      return color_;
    }
    /**
     * <code>.traffic.LightColor color = 2;</code>
     * @return The color.
     */
    @java.lang.Override public traffic.TrafficLight.LightColor getColor() {
      traffic.TrafficLight.LightColor result = traffic.TrafficLight.LightColor.forNumber(color_);
      return result == null ? traffic.TrafficLight.LightColor.UNRECOGNIZED : result;
    }

    public static final int SECONDS_REMAINING_FIELD_NUMBER = 3;
    private int secondsRemaining_ = 0;
    /**
     * <code>int32 seconds_remaining = 3;</code>
     * @return The secondsRemaining.
     */
    @java.lang.Override
    public int getSecondsRemaining() {
      return secondsRemaining_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, intersectionId_);
      }
      if (color_ != traffic.TrafficLight.LightColor.RED.getNumber()) {
        output.writeEnum(2, color_);
      }
      if (secondsRemaining_ != 0) {
        output.writeInt32(3, secondsRemaining_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, intersectionId_);
      }
      if (color_ != traffic.TrafficLight.LightColor.RED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, color_);
      }
      if (secondsRemaining_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, secondsRemaining_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof traffic.TrafficLight.TrafficLightStatus)) {
        return super.equals(obj);
      }
      traffic.TrafficLight.TrafficLightStatus other = (traffic.TrafficLight.TrafficLightStatus) obj;

      if (!getIntersectionId()
          .equals(other.getIntersectionId())) return false;
      if (color_ != other.color_) return false;
      if (getSecondsRemaining()
          != other.getSecondsRemaining()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERSECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getIntersectionId().hashCode();
      hash = (37 * hash) + COLOR_FIELD_NUMBER;
      hash = (53 * hash) + color_;
      hash = (37 * hash) + SECONDS_REMAINING_FIELD_NUMBER;
      hash = (53 * hash) + getSecondsRemaining();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static traffic.TrafficLight.TrafficLightStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static traffic.TrafficLight.TrafficLightStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.TrafficLightStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(traffic.TrafficLight.TrafficLightStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code traffic.TrafficLightStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:traffic.TrafficLightStatus)
        traffic.TrafficLight.TrafficLightStatusOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return traffic.TrafficLight.internal_static_traffic_TrafficLightStatus_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return traffic.TrafficLight.internal_static_traffic_TrafficLightStatus_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                traffic.TrafficLight.TrafficLightStatus.class, traffic.TrafficLight.TrafficLightStatus.Builder.class);
      }

      // Construct using traffic.TrafficLight.TrafficLightStatus.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        intersectionId_ = "";
        color_ = 0;
        secondsRemaining_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return traffic.TrafficLight.internal_static_traffic_TrafficLightStatus_descriptor;
      }

      @java.lang.Override
      public traffic.TrafficLight.TrafficLightStatus getDefaultInstanceForType() {
        return traffic.TrafficLight.TrafficLightStatus.getDefaultInstance();
      }

      @java.lang.Override
      public traffic.TrafficLight.TrafficLightStatus build() {
        traffic.TrafficLight.TrafficLightStatus result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public traffic.TrafficLight.TrafficLightStatus buildPartial() {
        traffic.TrafficLight.TrafficLightStatus result = new traffic.TrafficLight.TrafficLightStatus(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(traffic.TrafficLight.TrafficLightStatus result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.intersectionId_ = intersectionId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.color_ = color_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.secondsRemaining_ = secondsRemaining_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof traffic.TrafficLight.TrafficLightStatus) {
          return mergeFrom((traffic.TrafficLight.TrafficLightStatus)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(traffic.TrafficLight.TrafficLightStatus other) {
        if (other == traffic.TrafficLight.TrafficLightStatus.getDefaultInstance()) return this;
        if (!other.getIntersectionId().isEmpty()) {
          intersectionId_ = other.intersectionId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.color_ != 0) {
          setColorValue(other.getColorValue());
        }
        if (other.getSecondsRemaining() != 0) {
          setSecondsRemaining(other.getSecondsRemaining());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                intersectionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                color_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                secondsRemaining_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object intersectionId_ = "";
      /**
       * <code>string intersection_id = 1;</code>
       * @return The intersectionId.
       */
      public java.lang.String getIntersectionId() {
        java.lang.Object ref = intersectionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          intersectionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return The bytes for intersectionId.
       */
      public com.google.protobuf.ByteString
          getIntersectionIdBytes() {
        java.lang.Object ref = intersectionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          intersectionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntersectionId() {
        intersectionId_ = getDefaultInstance().getIntersectionId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The bytes for intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int color_ = 0;
      /**
       * <code>.traffic.LightColor color = 2;</code>
       * @return The enum numeric value on the wire for color.
       */
      @java.lang.Override public int getColorValue() {
        return color_;
      }
      /**
       * <code>.traffic.LightColor color = 2;</code>
       * @param value The enum numeric value on the wire for color to set.
       * @return This builder for chaining.
       */
      public Builder setColorValue(int value) {
        color_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.traffic.LightColor color = 2;</code>
       * @return The color.
       */
      @java.lang.Override
      public traffic.TrafficLight.LightColor getColor() {
        traffic.TrafficLight.LightColor result = traffic.TrafficLight.LightColor.forNumber(color_);
        return result == null ? traffic.TrafficLight.LightColor.UNRECOGNIZED : result;
      }
      /**
       * <code>.traffic.LightColor color = 2;</code>
       * @param value The color to set.
       * @return This builder for chaining.
       */
      public Builder setColor(traffic.TrafficLight.LightColor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        color_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.traffic.LightColor color = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearColor() {
        bitField0_ = (bitField0_ & ~0x00000002);
        color_ = 0;
        onChanged();
        return this;
      }

      private int secondsRemaining_ ;
      /**
       * <code>int32 seconds_remaining = 3;</code>
       * @return The secondsRemaining.
       */
      @java.lang.Override
      public int getSecondsRemaining() {
        return secondsRemaining_;
      }
      /**
       * <code>int32 seconds_remaining = 3;</code>
       * @param value The secondsRemaining to set.
       * @return This builder for chaining.
       */
      public Builder setSecondsRemaining(int value) {

        secondsRemaining_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 seconds_remaining = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearSecondsRemaining() {
        bitField0_ = (bitField0_ & ~0x00000004);
        secondsRemaining_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:traffic.TrafficLightStatus)
    }

    // @@protoc_insertion_point(class_scope:traffic.TrafficLightStatus)
    private static final traffic.TrafficLight.TrafficLightStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new traffic.TrafficLight.TrafficLightStatus();
    }

    public static traffic.TrafficLight.TrafficLightStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrafficLightStatus>
        PARSER = new com.google.protobuf.AbstractParser<TrafficLightStatus>() {
      @java.lang.Override
      public TrafficLightStatus parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TrafficLightStatus> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrafficLightStatus> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public traffic.TrafficLight.TrafficLightStatus getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SequenceUpdateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:traffic.SequenceUpdate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    java.lang.String getIntersectionId();
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    com.google.protobuf.ByteString
        getIntersectionIdBytes();

    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return A list containing the sequence.
     */
    java.util.List<traffic.TrafficLight.LightColor> getSequenceList();
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return The count of sequence.
     */
    int getSequenceCount();
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index of the element to return.
     * @return The sequence at the given index.
     */
    traffic.TrafficLight.LightColor getSequence(int index);
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return A list containing the enum numeric values on the wire for sequence.
     */
    java.util.List<java.lang.Integer>
    getSequenceValueList();
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sequence at the given index.
     */
    int getSequenceValue(int index);

    /**
     * <code>int32 g = 3;</code>
     * @return The g.
     */
    int getG();

    /**
     * <code>int32 y = 4;</code>
     * @return The y.
     */
    int getY();

    /**
     * <code>int32 r = 5;</code>
     * @return The r.
     */
    int getR();
  }
  /**
   * Protobuf type {@code traffic.SequenceUpdate}
   */
  public static final class SequenceUpdate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:traffic.SequenceUpdate)
      SequenceUpdateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SequenceUpdate.newBuilder() to construct.
    private SequenceUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SequenceUpdate() {
      intersectionId_ = "";
      sequence_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SequenceUpdate();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              traffic.TrafficLight.SequenceUpdate.class, traffic.TrafficLight.SequenceUpdate.Builder.class);
    }

    public static final int INTERSECTION_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object intersectionId_ = "";
    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    @java.lang.Override
    public java.lang.String getIntersectionId() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intersectionId_ = s;
        return s;
      }
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIntersectionIdBytes() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intersectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCE_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<java.lang.Integer> sequence_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, traffic.TrafficLight.LightColor> sequence_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, traffic.TrafficLight.LightColor>() {
              public traffic.TrafficLight.LightColor convert(java.lang.Integer from) {
                traffic.TrafficLight.LightColor result = traffic.TrafficLight.LightColor.forNumber(from);
                return result == null ? traffic.TrafficLight.LightColor.UNRECOGNIZED : result;
              }
            };
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return A list containing the sequence.
     */
    @java.lang.Override
    public java.util.List<traffic.TrafficLight.LightColor> getSequenceList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, traffic.TrafficLight.LightColor>(sequence_, sequence_converter_);
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return The count of sequence.
     */
    @java.lang.Override
    public int getSequenceCount() {
      return sequence_.size();
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index of the element to return.
     * @return The sequence at the given index.
     */
    @java.lang.Override
    public traffic.TrafficLight.LightColor getSequence(int index) {
      return sequence_converter_.convert(sequence_.get(index));
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return A list containing the enum numeric values on the wire for sequence.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
    getSequenceValueList() {
      return sequence_;
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sequence at the given index.
     */
    @java.lang.Override
    public int getSequenceValue(int index) {
      return sequence_.get(index);
    }
    private int sequenceMemoizedSerializedSize;

    public static final int G_FIELD_NUMBER = 3;
    private int g_ = 0;
    /**
     * <code>int32 g = 3;</code>
     * @return The g.
     */
    @java.lang.Override
    public int getG() {
      return g_;
    }

    public static final int Y_FIELD_NUMBER = 4;
    private int y_ = 0;
    /**
     * <code>int32 y = 4;</code>
     * @return The y.
     */
    @java.lang.Override
    public int getY() {
      return y_;
    }

    public static final int R_FIELD_NUMBER = 5;
    private int r_ = 0;
    /**
     * <code>int32 r = 5;</code>
     * @return The r.
     */
    @java.lang.Override
    public int getR() {
      return r_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, intersectionId_);
      }
      if (getSequenceList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(sequenceMemoizedSerializedSize);
      }
      for (int i = 0; i < sequence_.size(); i++) {
        output.writeEnumNoTag(sequence_.get(i));
      }
      if (g_ != 0) {
        output.writeInt32(3, g_);
      }
      if (y_ != 0) {
        output.writeInt32(4, y_);
      }
      if (r_ != 0) {
        output.writeInt32(5, r_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, intersectionId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < sequence_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeEnumSizeNoTag(sequence_.get(i));
        }
        size += dataSize;
        if (!getSequenceList().isEmpty()) {  size += 1;
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(dataSize);
        }sequenceMemoizedSerializedSize = dataSize;
      }
      if (g_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, g_);
      }
      if (y_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, y_);
      }
      if (r_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, r_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof traffic.TrafficLight.SequenceUpdate)) {
        return super.equals(obj);
      }
      traffic.TrafficLight.SequenceUpdate other = (traffic.TrafficLight.SequenceUpdate) obj;

      if (!getIntersectionId()
          .equals(other.getIntersectionId())) return false;
      if (!sequence_.equals(other.sequence_)) return false;
      if (getG()
          != other.getG()) return false;
      if (getY()
          != other.getY()) return false;
      if (getR()
          != other.getR()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERSECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getIntersectionId().hashCode();
      if (getSequenceCount() > 0) {
        hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
        hash = (53 * hash) + sequence_.hashCode();
      }
      hash = (37 * hash) + G_FIELD_NUMBER;
      hash = (53 * hash) + getG();
      hash = (37 * hash) + Y_FIELD_NUMBER;
      hash = (53 * hash) + getY();
      hash = (37 * hash) + R_FIELD_NUMBER;
      hash = (53 * hash) + getR();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static traffic.TrafficLight.SequenceUpdate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static traffic.TrafficLight.SequenceUpdate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.SequenceUpdate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(traffic.TrafficLight.SequenceUpdate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code traffic.SequenceUpdate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:traffic.SequenceUpdate)
        traffic.TrafficLight.SequenceUpdateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                traffic.TrafficLight.SequenceUpdate.class, traffic.TrafficLight.SequenceUpdate.Builder.class);
      }

      // Construct using traffic.TrafficLight.SequenceUpdate.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        intersectionId_ = "";
        sequence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        g_ = 0;
        y_ = 0;
        r_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_descriptor;
      }

      @java.lang.Override
      public traffic.TrafficLight.SequenceUpdate getDefaultInstanceForType() {
        return traffic.TrafficLight.SequenceUpdate.getDefaultInstance();
      }

      @java.lang.Override
      public traffic.TrafficLight.SequenceUpdate build() {
        traffic.TrafficLight.SequenceUpdate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public traffic.TrafficLight.SequenceUpdate buildPartial() {
        traffic.TrafficLight.SequenceUpdate result = new traffic.TrafficLight.SequenceUpdate(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(traffic.TrafficLight.SequenceUpdate result) {
        if (((bitField0_ & 0x00000002) != 0)) {
          sequence_ = java.util.Collections.unmodifiableList(sequence_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.sequence_ = sequence_;
      }

      private void buildPartial0(traffic.TrafficLight.SequenceUpdate result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.intersectionId_ = intersectionId_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.g_ = g_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.y_ = y_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.r_ = r_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof traffic.TrafficLight.SequenceUpdate) {
          return mergeFrom((traffic.TrafficLight.SequenceUpdate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(traffic.TrafficLight.SequenceUpdate other) {
        if (other == traffic.TrafficLight.SequenceUpdate.getDefaultInstance()) return this;
        if (!other.getIntersectionId().isEmpty()) {
          intersectionId_ = other.intersectionId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.sequence_.isEmpty()) {
          if (sequence_.isEmpty()) {
            sequence_ = other.sequence_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSequenceIsMutable();
            sequence_.addAll(other.sequence_);
          }
          onChanged();
        }
        if (other.getG() != 0) {
          setG(other.getG());
        }
        if (other.getY() != 0) {
          setY(other.getY());
        }
        if (other.getR() != 0) {
          setR(other.getR());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                intersectionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                int tmpRaw = input.readEnum();
                ensureSequenceIsMutable();
                sequence_.add(tmpRaw);
                break;
              } // case 16
              case 18: {
                int length = input.readRawVarint32();
                int oldLimit = input.pushLimit(length);
                while(input.getBytesUntilLimit() > 0) {
                  int tmpRaw = input.readEnum();
                  ensureSequenceIsMutable();
                  sequence_.add(tmpRaw);
                }
                input.popLimit(oldLimit);
                break;
              } // case 18
              case 24: {
                g_ = input.readInt32();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                y_ = input.readInt32();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                r_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object intersectionId_ = "";
      /**
       * <code>string intersection_id = 1;</code>
       * @return The intersectionId.
       */
      public java.lang.String getIntersectionId() {
        java.lang.Object ref = intersectionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          intersectionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return The bytes for intersectionId.
       */
      public com.google.protobuf.ByteString
          getIntersectionIdBytes() {
        java.lang.Object ref = intersectionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          intersectionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntersectionId() {
        intersectionId_ = getDefaultInstance().getIntersectionId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The bytes for intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> sequence_ =
        java.util.Collections.emptyList();
      private void ensureSequenceIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          sequence_ = new java.util.ArrayList<java.lang.Integer>(sequence_);
          bitField0_ |= 0x00000002;
        }
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @return A list containing the sequence.
       */
      public java.util.List<traffic.TrafficLight.LightColor> getSequenceList() {
        return new com.google.protobuf.Internal.ListAdapter<
            java.lang.Integer, traffic.TrafficLight.LightColor>(sequence_, sequence_converter_);
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @return The count of sequence.
       */
      public int getSequenceCount() {
        return sequence_.size();
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param index The index of the element to return.
       * @return The sequence at the given index.
       */
      public traffic.TrafficLight.LightColor getSequence(int index) {
        return sequence_converter_.convert(sequence_.get(index));
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param index The index to set the value at.
       * @param value The sequence to set.
       * @return This builder for chaining.
       */
      public Builder setSequence(
          int index, traffic.TrafficLight.LightColor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSequenceIsMutable();
        sequence_.set(index, value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param value The sequence to add.
       * @return This builder for chaining.
       */
      public Builder addSequence(traffic.TrafficLight.LightColor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSequenceIsMutable();
        sequence_.add(value.getNumber());
        onChanged();
        return this;
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param values The sequence to add.
       * @return This builder for chaining.
       */
      public Builder addAllSequence(
          java.lang.Iterable<? extends traffic.TrafficLight.LightColor> values) {
        ensureSequenceIsMutable();
        for (traffic.TrafficLight.LightColor value : values) {
          sequence_.add(value.getNumber());
        }
        onChanged();
        return this;
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSequence() {
        sequence_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @return A list containing the enum numeric values on the wire for sequence.
       */
      public java.util.List<java.lang.Integer>
      getSequenceValueList() {
        return java.util.Collections.unmodifiableList(sequence_);
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of sequence at the given index.
       */
      public int getSequenceValue(int index) {
        return sequence_.get(index);
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param index The index to set the value at.
       * @param value The enum numeric value on the wire for sequence to set.
       * @return This builder for chaining.
       */
      public Builder setSequenceValue(
          int index, int value) {
        ensureSequenceIsMutable();
        sequence_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param value The enum numeric value on the wire for sequence to add.
       * @return This builder for chaining.
       */
      public Builder addSequenceValue(int value) {
        ensureSequenceIsMutable();
        sequence_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated .traffic.LightColor sequence = 2;</code>
       * @param values The enum numeric values on the wire for sequence to add.
       * @return This builder for chaining.
       */
      public Builder addAllSequenceValue(
          java.lang.Iterable<java.lang.Integer> values) {
        ensureSequenceIsMutable();
        for (int value : values) {
          sequence_.add(value);
        }
        onChanged();
        return this;
      }

      private int g_ ;
      /**
       * <code>int32 g = 3;</code>
       * @return The g.
       */
      @java.lang.Override
      public int getG() {
        return g_;
      }
      /**
       * <code>int32 g = 3;</code>
       * @param value The g to set.
       * @return This builder for chaining.
       */
      public Builder setG(int value) {

        g_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>int32 g = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearG() {
        bitField0_ = (bitField0_ & ~0x00000004);
        g_ = 0;
        onChanged();
        return this;
      }

      private int y_ ;
      /**
       * <code>int32 y = 4;</code>
       * @return The y.
       */
      @java.lang.Override
      public int getY() {
        return y_;
      }
      /**
       * <code>int32 y = 4;</code>
       * @param value The y to set.
       * @return This builder for chaining.
       */
      public Builder setY(int value) {

        y_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>int32 y = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y_ = 0;
        onChanged();
        return this;
      }

      private int r_ ;
      /**
       * <code>int32 r = 5;</code>
       * @return The r.
       */
      @java.lang.Override
      public int getR() {
        return r_;
      }
      /**
       * <code>int32 r = 5;</code>
       * @param value The r to set.
       * @return This builder for chaining.
       */
      public Builder setR(int value) {

        r_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>int32 r = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearR() {
        bitField0_ = (bitField0_ & ~0x00000010);
        r_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:traffic.SequenceUpdate)
    }

    // @@protoc_insertion_point(class_scope:traffic.SequenceUpdate)
    private static final traffic.TrafficLight.SequenceUpdate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new traffic.TrafficLight.SequenceUpdate();
    }

    public static traffic.TrafficLight.SequenceUpdate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SequenceUpdate>
        PARSER = new com.google.protobuf.AbstractParser<SequenceUpdate>() {
      @java.lang.Override
      public SequenceUpdate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SequenceUpdate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SequenceUpdate> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public traffic.TrafficLight.SequenceUpdate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SeqUpdateSummaryOrBuilder extends
      // @@protoc_insertion_point(interface_extends:traffic.SeqUpdateSummary)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    java.lang.String getIntersectionId();
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    com.google.protobuf.ByteString
        getIntersectionIdBytes();

    /**
     * <code>bool applied = 2;</code>
     * @return The applied.
     */
    boolean getApplied();
  }
  /**
   * Protobuf type {@code traffic.SeqUpdateSummary}
   */
  public static final class SeqUpdateSummary extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:traffic.SeqUpdateSummary)
      SeqUpdateSummaryOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SeqUpdateSummary.newBuilder() to construct.
    private SeqUpdateSummary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SeqUpdateSummary() {
      intersectionId_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SeqUpdateSummary();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return traffic.TrafficLight.internal_static_traffic_SeqUpdateSummary_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return traffic.TrafficLight.internal_static_traffic_SeqUpdateSummary_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              traffic.TrafficLight.SeqUpdateSummary.class, traffic.TrafficLight.SeqUpdateSummary.Builder.class);
    }

    public static final int INTERSECTION_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object intersectionId_ = "";
    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    @java.lang.Override
    public java.lang.String getIntersectionId() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intersectionId_ = s;
        return s;
      }
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIntersectionIdBytes() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intersectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int APPLIED_FIELD_NUMBER = 2;
    private boolean applied_ = false;
    /**
     * <code>bool applied = 2;</code>
     * @return The applied.
     */
    @java.lang.Override
    public boolean getApplied() {
      return applied_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, intersectionId_);
      }
      if (applied_ != false) {
        output.writeBool(2, applied_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, intersectionId_);
      }
      if (applied_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, applied_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof traffic.TrafficLight.SeqUpdateSummary)) {
        return super.equals(obj);
      }
      traffic.TrafficLight.SeqUpdateSummary other = (traffic.TrafficLight.SeqUpdateSummary) obj;

      if (!getIntersectionId()
          .equals(other.getIntersectionId())) return false;
      if (getApplied()
          != other.getApplied()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERSECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getIntersectionId().hashCode();
      hash = (37 * hash) + APPLIED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getApplied());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static traffic.TrafficLight.SeqUpdateSummary parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static traffic.TrafficLight.SeqUpdateSummary parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.SeqUpdateSummary parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(traffic.TrafficLight.SeqUpdateSummary prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code traffic.SeqUpdateSummary}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:traffic.SeqUpdateSummary)
        traffic.TrafficLight.SeqUpdateSummaryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return traffic.TrafficLight.internal_static_traffic_SeqUpdateSummary_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return traffic.TrafficLight.internal_static_traffic_SeqUpdateSummary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                traffic.TrafficLight.SeqUpdateSummary.class, traffic.TrafficLight.SeqUpdateSummary.Builder.class);
      }

      // Construct using traffic.TrafficLight.SeqUpdateSummary.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        intersectionId_ = "";
        applied_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return traffic.TrafficLight.internal_static_traffic_SeqUpdateSummary_descriptor;
      }

      @java.lang.Override
      public traffic.TrafficLight.SeqUpdateSummary getDefaultInstanceForType() {
        return traffic.TrafficLight.SeqUpdateSummary.getDefaultInstance();
      }

      @java.lang.Override
      public traffic.TrafficLight.SeqUpdateSummary build() {
        traffic.TrafficLight.SeqUpdateSummary result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public traffic.TrafficLight.SeqUpdateSummary buildPartial() {
        traffic.TrafficLight.SeqUpdateSummary result = new traffic.TrafficLight.SeqUpdateSummary(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(traffic.TrafficLight.SeqUpdateSummary result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.intersectionId_ = intersectionId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.applied_ = applied_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof traffic.TrafficLight.SeqUpdateSummary) {
          return mergeFrom((traffic.TrafficLight.SeqUpdateSummary)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(traffic.TrafficLight.SeqUpdateSummary other) {
        if (other == traffic.TrafficLight.SeqUpdateSummary.getDefaultInstance()) return this;
        if (!other.getIntersectionId().isEmpty()) {
          intersectionId_ = other.intersectionId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.getApplied() != false) {
          setApplied(other.getApplied());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                intersectionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                applied_ = input.readBool();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object intersectionId_ = "";
      /**
       * <code>string intersection_id = 1;</code>
       * @return The intersectionId.
       */
      public java.lang.String getIntersectionId() {
        java.lang.Object ref = intersectionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          intersectionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return The bytes for intersectionId.
       */
      public com.google.protobuf.ByteString
          getIntersectionIdBytes() {
        java.lang.Object ref = intersectionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          intersectionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntersectionId() {
        intersectionId_ = getDefaultInstance().getIntersectionId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The bytes for intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private boolean applied_ ;
      /**
       * <code>bool applied = 2;</code>
       * @return The applied.
       */
      @java.lang.Override
      public boolean getApplied() {
        return applied_;
      }
      /**
       * <code>bool applied = 2;</code>
       * @param value The applied to set.
       * @return This builder for chaining.
       */
      public Builder setApplied(boolean value) {

        applied_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>bool applied = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearApplied() {
        bitField0_ = (bitField0_ & ~0x00000002);
        applied_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:traffic.SeqUpdateSummary)
    }

    // @@protoc_insertion_point(class_scope:traffic.SeqUpdateSummary)
    private static final traffic.TrafficLight.SeqUpdateSummary DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new traffic.TrafficLight.SeqUpdateSummary();
    }

    public static traffic.TrafficLight.SeqUpdateSummary getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SeqUpdateSummary>
        PARSER = new com.google.protobuf.AbstractParser<SeqUpdateSummary>() {
      @java.lang.Override
      public SeqUpdateSummary parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SeqUpdateSummary> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SeqUpdateSummary> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public traffic.TrafficLight.SeqUpdateSummary getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TrafficLightCmdOrBuilder extends
      // @@protoc_insertion_point(interface_extends:traffic.TrafficLightCmd)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    java.lang.String getIntersectionId();
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    com.google.protobuf.ByteString
        getIntersectionIdBytes();

    /**
     * <code>.traffic.LightColor override = 2;</code>
     * @return The enum numeric value on the wire for override.
     */
    int getOverrideValue();
    /**
     * <code>.traffic.LightColor override = 2;</code>
     * @return The override.
     */
    traffic.TrafficLight.LightColor getOverride();
  }
  /**
   * Protobuf type {@code traffic.TrafficLightCmd}
   */
  public static final class TrafficLightCmd extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:traffic.TrafficLightCmd)
      TrafficLightCmdOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TrafficLightCmd.newBuilder() to construct.
    private TrafficLightCmd(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TrafficLightCmd() {
      intersectionId_ = "";
      override_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TrafficLightCmd();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return traffic.TrafficLight.internal_static_traffic_TrafficLightCmd_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return traffic.TrafficLight.internal_static_traffic_TrafficLightCmd_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              traffic.TrafficLight.TrafficLightCmd.class, traffic.TrafficLight.TrafficLightCmd.Builder.class);
    }

    public static final int INTERSECTION_ID_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object intersectionId_ = "";
    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    @java.lang.Override
    public java.lang.String getIntersectionId() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intersectionId_ = s;
        return s;
      }
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getIntersectionIdBytes() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intersectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OVERRIDE_FIELD_NUMBER = 2;
    private int override_ = 0;
    /**
     * <code>.traffic.LightColor override = 2;</code>
     * @return The enum numeric value on the wire for override.
     */
    @java.lang.Override public int getOverrideValue() {
      return override_;
    }
    /**
     * <code>.traffic.LightColor override = 2;</code>
     * @return The override.
     */
    @java.lang.Override public traffic.TrafficLight.LightColor getOverride() {
      traffic.TrafficLight.LightColor result = traffic.TrafficLight.LightColor.forNumber(override_);
      return result == null ? traffic.TrafficLight.LightColor.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, intersectionId_);
      }
      if (override_ != traffic.TrafficLight.LightColor.RED.getNumber()) {
        output.writeEnum(2, override_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, intersectionId_);
      }
      if (override_ != traffic.TrafficLight.LightColor.RED.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, override_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof traffic.TrafficLight.TrafficLightCmd)) {
        return super.equals(obj);
      }
      traffic.TrafficLight.TrafficLightCmd other = (traffic.TrafficLight.TrafficLightCmd) obj;

      if (!getIntersectionId()
          .equals(other.getIntersectionId())) return false;
      if (override_ != other.override_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + INTERSECTION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getIntersectionId().hashCode();
      hash = (37 * hash) + OVERRIDE_FIELD_NUMBER;
      hash = (53 * hash) + override_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static traffic.TrafficLight.TrafficLightCmd parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static traffic.TrafficLight.TrafficLightCmd parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static traffic.TrafficLight.TrafficLightCmd parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(traffic.TrafficLight.TrafficLightCmd prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code traffic.TrafficLightCmd}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:traffic.TrafficLightCmd)
        traffic.TrafficLight.TrafficLightCmdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return traffic.TrafficLight.internal_static_traffic_TrafficLightCmd_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return traffic.TrafficLight.internal_static_traffic_TrafficLightCmd_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                traffic.TrafficLight.TrafficLightCmd.class, traffic.TrafficLight.TrafficLightCmd.Builder.class);
      }

      // Construct using traffic.TrafficLight.TrafficLightCmd.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        intersectionId_ = "";
        override_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return traffic.TrafficLight.internal_static_traffic_TrafficLightCmd_descriptor;
      }

      @java.lang.Override
      public traffic.TrafficLight.TrafficLightCmd getDefaultInstanceForType() {
        return traffic.TrafficLight.TrafficLightCmd.getDefaultInstance();
      }

      @java.lang.Override
      public traffic.TrafficLight.TrafficLightCmd build() {
        traffic.TrafficLight.TrafficLightCmd result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public traffic.TrafficLight.TrafficLightCmd buildPartial() {
        traffic.TrafficLight.TrafficLightCmd result = new traffic.TrafficLight.TrafficLightCmd(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(traffic.TrafficLight.TrafficLightCmd result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.intersectionId_ = intersectionId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.override_ = override_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof traffic.TrafficLight.TrafficLightCmd) {
          return mergeFrom((traffic.TrafficLight.TrafficLightCmd)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(traffic.TrafficLight.TrafficLightCmd other) {
        if (other == traffic.TrafficLight.TrafficLightCmd.getDefaultInstance()) return this;
        if (!other.getIntersectionId().isEmpty()) {
          intersectionId_ = other.intersectionId_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (other.override_ != 0) {
          setOverrideValue(other.getOverrideValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                intersectionId_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                override_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object intersectionId_ = "";
      /**
       * <code>string intersection_id = 1;</code>
       * @return The intersectionId.
       */
      public java.lang.String getIntersectionId() {
        java.lang.Object ref = intersectionId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          intersectionId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return The bytes for intersectionId.
       */
      public com.google.protobuf.ByteString
          getIntersectionIdBytes() {
        java.lang.Object ref = intersectionId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          intersectionId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionId(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIntersectionId() {
        intersectionId_ = getDefaultInstance().getIntersectionId();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>string intersection_id = 1;</code>
       * @param value The bytes for intersectionId to set.
       * @return This builder for chaining.
       */
      public Builder setIntersectionIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        intersectionId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private int override_ = 0;
      /**
       * <code>.traffic.LightColor override = 2;</code>
       * @return The enum numeric value on the wire for override.
       */
      @java.lang.Override public int getOverrideValue() {
        return override_;
      }
      /**
       * <code>.traffic.LightColor override = 2;</code>
       * @param value The enum numeric value on the wire for override to set.
       * @return This builder for chaining.
       */
      public Builder setOverrideValue(int value) {
        override_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>.traffic.LightColor override = 2;</code>
       * @return The override.
       */
      @java.lang.Override
      public traffic.TrafficLight.LightColor getOverride() {
        traffic.TrafficLight.LightColor result = traffic.TrafficLight.LightColor.forNumber(override_);
        return result == null ? traffic.TrafficLight.LightColor.UNRECOGNIZED : result;
      }
      /**
       * <code>.traffic.LightColor override = 2;</code>
       * @param value The override to set.
       * @return This builder for chaining.
       */
      public Builder setOverride(traffic.TrafficLight.LightColor value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        override_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.traffic.LightColor override = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearOverride() {
        bitField0_ = (bitField0_ & ~0x00000002);
        override_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:traffic.TrafficLightCmd)
    }

    // @@protoc_insertion_point(class_scope:traffic.TrafficLightCmd)
    private static final traffic.TrafficLight.TrafficLightCmd DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new traffic.TrafficLight.TrafficLightCmd();
    }

    public static traffic.TrafficLight.TrafficLightCmd getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TrafficLightCmd>
        PARSER = new com.google.protobuf.AbstractParser<TrafficLightCmd>() {
      @java.lang.Override
      public TrafficLightCmd parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<TrafficLightCmd> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TrafficLightCmd> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public traffic.TrafficLight.TrafficLightCmd getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_traffic_GetStatusRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_traffic_GetStatusRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_traffic_TrafficLightStatus_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_traffic_TrafficLightStatus_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_traffic_SequenceUpdate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_traffic_SequenceUpdate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_traffic_SeqUpdateSummary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_traffic_SeqUpdateSummary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_traffic_TrafficLightCmd_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_traffic_TrafficLightCmd_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023traffic_light.proto\022\007traffic\"+\n\020GetSta" +
      "tusRequest\022\027\n\017intersection_id\030\001 \001(\t\"l\n\022T" +
      "rafficLightStatus\022\027\n\017intersection_id\030\001 \001" +
      "(\t\022\"\n\005color\030\002 \001(\0162\023.traffic.LightColor\022\031" +
      "\n\021seconds_remaining\030\003 \001(\005\"q\n\016SequenceUpd" +
      "ate\022\027\n\017intersection_id\030\001 \001(\t\022%\n\010sequence" +
      "\030\002 \003(\0162\023.traffic.LightColor\022\t\n\001g\030\003 \001(\005\022\t" +
      "\n\001y\030\004 \001(\005\022\t\n\001r\030\005 \001(\005\"<\n\020SeqUpdateSummary" +
      "\022\027\n\017intersection_id\030\001 \001(\t\022\017\n\007applied\030\002 \001" +
      "(\010\"Q\n\017TrafficLightCmd\022\027\n\017intersection_id" +
      "\030\001 \001(\t\022%\n\010override\030\002 \001(\0162\023.traffic.Light" +
      "Color*,\n\nLightColor\022\007\n\003RED\020\000\022\n\n\006YELLOW\020\001" +
      "\022\t\n\005GREEN\020\0022\260\002\n\023TrafficLightService\022C\n\tG" +
      "etStatus\022\031.traffic.GetStatusRequest\032\033.tr" +
      "affic.TrafficLightStatus\022G\n\013WatchStatus\022" +
      "\031.traffic.GetStatusRequest\032\033.traffic.Tra" +
      "fficLightStatus0\001\022A\n\tUpdateSeq\022\027.traffic" +
      ".SequenceUpdate\032\031.traffic.SeqUpdateSumma" +
      "ry(\001\022H\n\013LiveControl\022\030.traffic.TrafficLig" +
      "htCmd\032\033.traffic.TrafficLightStatus(\0010\001b\006" +
      "proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_traffic_GetStatusRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_traffic_GetStatusRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_traffic_GetStatusRequest_descriptor,
        new java.lang.String[] { "IntersectionId", });
    internal_static_traffic_TrafficLightStatus_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_traffic_TrafficLightStatus_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_traffic_TrafficLightStatus_descriptor,
        new java.lang.String[] { "IntersectionId", "Color", "SecondsRemaining", });
    internal_static_traffic_SequenceUpdate_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_traffic_SequenceUpdate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_traffic_SequenceUpdate_descriptor,
        new java.lang.String[] { "IntersectionId", "Sequence", "G", "Y", "R", });
    internal_static_traffic_SeqUpdateSummary_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_traffic_SeqUpdateSummary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_traffic_SeqUpdateSummary_descriptor,
        new java.lang.String[] { "IntersectionId", "Applied", });
    internal_static_traffic_TrafficLightCmd_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_traffic_TrafficLightCmd_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_traffic_TrafficLightCmd_descriptor,
        new java.lang.String[] { "IntersectionId", "Override", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
