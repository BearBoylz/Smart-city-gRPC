// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: traffic_light.proto

// Protobuf Java Version: 3.25.3
package traffic;

/**
 * Protobuf type {@code traffic.SequenceUpdate}
 */
public final class SequenceUpdate extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:traffic.SequenceUpdate)
    SequenceUpdateOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SequenceUpdate.newBuilder() to construct.
  private SequenceUpdate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SequenceUpdate() {
    intersectionId_ = "";
    sequence_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SequenceUpdate();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            traffic.SequenceUpdate.class, traffic.SequenceUpdate.Builder.class);
  }

  public static final int INTERSECTION_ID_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object intersectionId_ = "";
  /**
   * <code>string intersection_id = 1;</code>
   * @return The intersectionId.
   */
  @java.lang.Override
  public java.lang.String getIntersectionId() {
    java.lang.Object ref = intersectionId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      intersectionId_ = s;
      return s;
    }
  }
  /**
   * <code>string intersection_id = 1;</code>
   * @return The bytes for intersectionId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getIntersectionIdBytes() {
    java.lang.Object ref = intersectionId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      intersectionId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SEQUENCE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private java.util.List<java.lang.Integer> sequence_;
  private static final com.google.protobuf.Internal.ListAdapter.Converter<
      java.lang.Integer, traffic.LightColor> sequence_converter_ =
          new com.google.protobuf.Internal.ListAdapter.Converter<
              java.lang.Integer, traffic.LightColor>() {
            public traffic.LightColor convert(java.lang.Integer from) {
              traffic.LightColor result = traffic.LightColor.forNumber(from);
              return result == null ? traffic.LightColor.UNRECOGNIZED : result;
            }
          };
  /**
   * <code>repeated .traffic.LightColor sequence = 2;</code>
   * @return A list containing the sequence.
   */
  @java.lang.Override
  public java.util.List<traffic.LightColor> getSequenceList() {
    return new com.google.protobuf.Internal.ListAdapter<
        java.lang.Integer, traffic.LightColor>(sequence_, sequence_converter_);
  }
  /**
   * <code>repeated .traffic.LightColor sequence = 2;</code>
   * @return The count of sequence.
   */
  @java.lang.Override
  public int getSequenceCount() {
    return sequence_.size();
  }
  /**
   * <code>repeated .traffic.LightColor sequence = 2;</code>
   * @param index The index of the element to return.
   * @return The sequence at the given index.
   */
  @java.lang.Override
  public traffic.LightColor getSequence(int index) {
    return sequence_converter_.convert(sequence_.get(index));
  }
  /**
   * <code>repeated .traffic.LightColor sequence = 2;</code>
   * @return A list containing the enum numeric values on the wire for sequence.
   */
  @java.lang.Override
  public java.util.List<java.lang.Integer>
  getSequenceValueList() {
    return sequence_;
  }
  /**
   * <code>repeated .traffic.LightColor sequence = 2;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of sequence at the given index.
   */
  @java.lang.Override
  public int getSequenceValue(int index) {
    return sequence_.get(index);
  }
  private int sequenceMemoizedSerializedSize;

  public static final int G_FIELD_NUMBER = 3;
  private int g_ = 0;
  /**
   * <code>int32 g = 3;</code>
   * @return The g.
   */
  @java.lang.Override
  public int getG() {
    return g_;
  }

  public static final int Y_FIELD_NUMBER = 4;
  private int y_ = 0;
  /**
   * <code>int32 y = 4;</code>
   * @return The y.
   */
  @java.lang.Override
  public int getY() {
    return y_;
  }

  public static final int R_FIELD_NUMBER = 5;
  private int r_ = 0;
  /**
   * <code>int32 r = 5;</code>
   * @return The r.
   */
  @java.lang.Override
  public int getR() {
    return r_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, intersectionId_);
    }
    if (getSequenceList().size() > 0) {
      output.writeUInt32NoTag(18);
      output.writeUInt32NoTag(sequenceMemoizedSerializedSize);
    }
    for (int i = 0; i < sequence_.size(); i++) {
      output.writeEnumNoTag(sequence_.get(i));
    }
    if (g_ != 0) {
      output.writeInt32(3, g_);
    }
    if (y_ != 0) {
      output.writeInt32(4, y_);
    }
    if (r_ != 0) {
      output.writeInt32(5, r_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(intersectionId_)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, intersectionId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < sequence_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeEnumSizeNoTag(sequence_.get(i));
      }
      size += dataSize;
      if (!getSequenceList().isEmpty()) {  size += 1;
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32SizeNoTag(dataSize);
      }sequenceMemoizedSerializedSize = dataSize;
    }
    if (g_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, g_);
    }
    if (y_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, y_);
    }
    if (r_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, r_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof traffic.SequenceUpdate)) {
      return super.equals(obj);
    }
    traffic.SequenceUpdate other = (traffic.SequenceUpdate) obj;

    if (!getIntersectionId()
        .equals(other.getIntersectionId())) return false;
    if (!sequence_.equals(other.sequence_)) return false;
    if (getG()
        != other.getG()) return false;
    if (getY()
        != other.getY()) return false;
    if (getR()
        != other.getR()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + INTERSECTION_ID_FIELD_NUMBER;
    hash = (53 * hash) + getIntersectionId().hashCode();
    if (getSequenceCount() > 0) {
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + sequence_.hashCode();
    }
    hash = (37 * hash) + G_FIELD_NUMBER;
    hash = (53 * hash) + getG();
    hash = (37 * hash) + Y_FIELD_NUMBER;
    hash = (53 * hash) + getY();
    hash = (37 * hash) + R_FIELD_NUMBER;
    hash = (53 * hash) + getR();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static traffic.SequenceUpdate parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static traffic.SequenceUpdate parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static traffic.SequenceUpdate parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static traffic.SequenceUpdate parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static traffic.SequenceUpdate parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static traffic.SequenceUpdate parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static traffic.SequenceUpdate parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static traffic.SequenceUpdate parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static traffic.SequenceUpdate parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static traffic.SequenceUpdate parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static traffic.SequenceUpdate parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static traffic.SequenceUpdate parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(traffic.SequenceUpdate prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code traffic.SequenceUpdate}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:traffic.SequenceUpdate)
      traffic.SequenceUpdateOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              traffic.SequenceUpdate.class, traffic.SequenceUpdate.Builder.class);
    }

    // Construct using traffic.SequenceUpdate.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      intersectionId_ = "";
      sequence_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      g_ = 0;
      y_ = 0;
      r_ = 0;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return traffic.TrafficLight.internal_static_traffic_SequenceUpdate_descriptor;
    }

    @java.lang.Override
    public traffic.SequenceUpdate getDefaultInstanceForType() {
      return traffic.SequenceUpdate.getDefaultInstance();
    }

    @java.lang.Override
    public traffic.SequenceUpdate build() {
      traffic.SequenceUpdate result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public traffic.SequenceUpdate buildPartial() {
      traffic.SequenceUpdate result = new traffic.SequenceUpdate(this);
      buildPartialRepeatedFields(result);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartialRepeatedFields(traffic.SequenceUpdate result) {
      if (((bitField0_ & 0x00000002) != 0)) {
        sequence_ = java.util.Collections.unmodifiableList(sequence_);
        bitField0_ = (bitField0_ & ~0x00000002);
      }
      result.sequence_ = sequence_;
    }

    private void buildPartial0(traffic.SequenceUpdate result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.intersectionId_ = intersectionId_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.g_ = g_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.y_ = y_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.r_ = r_;
      }
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof traffic.SequenceUpdate) {
        return mergeFrom((traffic.SequenceUpdate)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(traffic.SequenceUpdate other) {
      if (other == traffic.SequenceUpdate.getDefaultInstance()) return this;
      if (!other.getIntersectionId().isEmpty()) {
        intersectionId_ = other.intersectionId_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (!other.sequence_.isEmpty()) {
        if (sequence_.isEmpty()) {
          sequence_ = other.sequence_;
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          ensureSequenceIsMutable();
          sequence_.addAll(other.sequence_);
        }
        onChanged();
      }
      if (other.getG() != 0) {
        setG(other.getG());
      }
      if (other.getY() != 0) {
        setY(other.getY());
      }
      if (other.getR() != 0) {
        setR(other.getR());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              intersectionId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 16: {
              int tmpRaw = input.readEnum();
              ensureSequenceIsMutable();
              sequence_.add(tmpRaw);
              break;
            } // case 16
            case 18: {
              int length = input.readRawVarint32();
              int oldLimit = input.pushLimit(length);
              while(input.getBytesUntilLimit() > 0) {
                int tmpRaw = input.readEnum();
                ensureSequenceIsMutable();
                sequence_.add(tmpRaw);
              }
              input.popLimit(oldLimit);
              break;
            } // case 18
            case 24: {
              g_ = input.readInt32();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 32: {
              y_ = input.readInt32();
              bitField0_ |= 0x00000008;
              break;
            } // case 32
            case 40: {
              r_ = input.readInt32();
              bitField0_ |= 0x00000010;
              break;
            } // case 40
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object intersectionId_ = "";
    /**
     * <code>string intersection_id = 1;</code>
     * @return The intersectionId.
     */
    public java.lang.String getIntersectionId() {
      java.lang.Object ref = intersectionId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        intersectionId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @return The bytes for intersectionId.
     */
    public com.google.protobuf.ByteString
        getIntersectionIdBytes() {
      java.lang.Object ref = intersectionId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        intersectionId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @param value The intersectionId to set.
     * @return This builder for chaining.
     */
    public Builder setIntersectionId(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      intersectionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearIntersectionId() {
      intersectionId_ = getDefaultInstance().getIntersectionId();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <code>string intersection_id = 1;</code>
     * @param value The bytes for intersectionId to set.
     * @return This builder for chaining.
     */
    public Builder setIntersectionIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      checkByteStringIsUtf8(value);
      intersectionId_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.util.List<java.lang.Integer> sequence_ =
      java.util.Collections.emptyList();
    private void ensureSequenceIsMutable() {
      if (!((bitField0_ & 0x00000002) != 0)) {
        sequence_ = new java.util.ArrayList<java.lang.Integer>(sequence_);
        bitField0_ |= 0x00000002;
      }
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return A list containing the sequence.
     */
    public java.util.List<traffic.LightColor> getSequenceList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, traffic.LightColor>(sequence_, sequence_converter_);
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return The count of sequence.
     */
    public int getSequenceCount() {
      return sequence_.size();
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index of the element to return.
     * @return The sequence at the given index.
     */
    public traffic.LightColor getSequence(int index) {
      return sequence_converter_.convert(sequence_.get(index));
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index to set the value at.
     * @param value The sequence to set.
     * @return This builder for chaining.
     */
    public Builder setSequence(
        int index, traffic.LightColor value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSequenceIsMutable();
      sequence_.set(index, value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param value The sequence to add.
     * @return This builder for chaining.
     */
    public Builder addSequence(traffic.LightColor value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSequenceIsMutable();
      sequence_.add(value.getNumber());
      onChanged();
      return this;
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param values The sequence to add.
     * @return This builder for chaining.
     */
    public Builder addAllSequence(
        java.lang.Iterable<? extends traffic.LightColor> values) {
      ensureSequenceIsMutable();
      for (traffic.LightColor value : values) {
        sequence_.add(value.getNumber());
      }
      onChanged();
      return this;
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSequence() {
      sequence_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @return A list containing the enum numeric values on the wire for sequence.
     */
    public java.util.List<java.lang.Integer>
    getSequenceValueList() {
      return java.util.Collections.unmodifiableList(sequence_);
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index of the value to return.
     * @return The enum numeric value on the wire of sequence at the given index.
     */
    public int getSequenceValue(int index) {
      return sequence_.get(index);
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param index The index to set the value at.
     * @param value The enum numeric value on the wire for sequence to set.
     * @return This builder for chaining.
     */
    public Builder setSequenceValue(
        int index, int value) {
      ensureSequenceIsMutable();
      sequence_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param value The enum numeric value on the wire for sequence to add.
     * @return This builder for chaining.
     */
    public Builder addSequenceValue(int value) {
      ensureSequenceIsMutable();
      sequence_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated .traffic.LightColor sequence = 2;</code>
     * @param values The enum numeric values on the wire for sequence to add.
     * @return This builder for chaining.
     */
    public Builder addAllSequenceValue(
        java.lang.Iterable<java.lang.Integer> values) {
      ensureSequenceIsMutable();
      for (int value : values) {
        sequence_.add(value);
      }
      onChanged();
      return this;
    }

    private int g_ ;
    /**
     * <code>int32 g = 3;</code>
     * @return The g.
     */
    @java.lang.Override
    public int getG() {
      return g_;
    }
    /**
     * <code>int32 g = 3;</code>
     * @param value The g to set.
     * @return This builder for chaining.
     */
    public Builder setG(int value) {

      g_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>int32 g = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearG() {
      bitField0_ = (bitField0_ & ~0x00000004);
      g_ = 0;
      onChanged();
      return this;
    }

    private int y_ ;
    /**
     * <code>int32 y = 4;</code>
     * @return The y.
     */
    @java.lang.Override
    public int getY() {
      return y_;
    }
    /**
     * <code>int32 y = 4;</code>
     * @param value The y to set.
     * @return This builder for chaining.
     */
    public Builder setY(int value) {

      y_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>int32 y = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearY() {
      bitField0_ = (bitField0_ & ~0x00000008);
      y_ = 0;
      onChanged();
      return this;
    }

    private int r_ ;
    /**
     * <code>int32 r = 5;</code>
     * @return The r.
     */
    @java.lang.Override
    public int getR() {
      return r_;
    }
    /**
     * <code>int32 r = 5;</code>
     * @param value The r to set.
     * @return This builder for chaining.
     */
    public Builder setR(int value) {

      r_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>int32 r = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearR() {
      bitField0_ = (bitField0_ & ~0x00000010);
      r_ = 0;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:traffic.SequenceUpdate)
  }

  // @@protoc_insertion_point(class_scope:traffic.SequenceUpdate)
  private static final traffic.SequenceUpdate DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new traffic.SequenceUpdate();
  }

  public static traffic.SequenceUpdate getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SequenceUpdate>
      PARSER = new com.google.protobuf.AbstractParser<SequenceUpdate>() {
    @java.lang.Override
    public SequenceUpdate parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<SequenceUpdate> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SequenceUpdate> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public traffic.SequenceUpdate getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

